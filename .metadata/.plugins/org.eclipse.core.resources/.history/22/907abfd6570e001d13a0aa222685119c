package com.demo.dao;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.demo.db.query.DBQUERY;
import com.demo.entity.User;

@Repository
public class UserDaoImpl implements UserDao {

	@Autowired
	private JdbcTemplate jdbcTemplate;

	@Override
	public int saveUser(User user) {
		return jdbcTemplate.update(DBQUERY.INSERT_USER, user.getName(),user.getCity(), user.getEmail(), user.getMobile());
	}

	@Override
	public User getUserById(int id) {
		return jdbcTemplate.queryForObject(DBQUERY.FIND_USER_BY_ID, new BeanPropertyRowMapper<User>(User.class), new Object[] { id });
	}
	
	@Override
	public List<User> getAllUsersById(int id) {
		return jdbcTemplate.query(DBQUERY.FIND_ALL_USER_BY_ID, new BeanPropertyRowMapper<User>(User.class), new Object[] { id });
	}
	
	@Override
	public int deleteUserById(int id){    
	    return jdbcTemplate.update(DBQUERY.DELETE_USER,id);    
	}    
	
	@Override
	public List<User> findAll() {
		return jdbcTemplate.query(DBQUERY.FIND_USER_BY_ID, new BeanPropertyRowMapper<User>(User.class));
	}
	
	@Override
	public int updateUser(User user) {
		return jdbcTemplate.update(DBQUERY.UPDATE_USER_BY_ID, user.getName(),user.getCity(), user.getEmail(), user.getMobile(),user.getId());
	}


}
